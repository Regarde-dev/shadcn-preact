{
  "name": "alert",
  "type": "registry:ui",
  "description": "Displays a callout for user attention.",
  "dependencies": [
    "class-variance-authority"
  ],
  "registryDependencies": [
    "https://shadcn-preact.regarde.dev/cn.json"
  ],
  "files": [
    {
      "path": "alert.tsx",
      "type": "registry:ui",
      "content": "import { type VariantProps, cva } from \"class-variance-authority\";\nimport { type HTMLAttributes, forwardRef } from \"preact/compat\";\nimport { cn } from \"./share/cn\";\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border px-4 py-3 text-sm grid has-[>svg]:grid-cols-[calc(var(--spacing)*4)_1fr] grid-cols-[0_1fr] has-[>svg]:gap-x-3 gap-y-0.5 items-start [&>svg]:size-4 [&>svg]:translate-y-0.5 [&>svg]:text-current\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-card text-card-foreground\",\n        destructive:\n          \"text-destructive bg-card [&>svg]:text-current *:data-[slot=alert-description]:text-destructive/90\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n);\n\nexport type AlertProps = HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>;\n\nexport const Alert = forwardRef<HTMLDivElement, AlertProps>(\n  ({ className, class: classNative, variant, ...props }, ref) => (\n    <div\n      ref={ref}\n      data-slot=\"alert\"\n      role=\"alert\"\n      className={cn(alertVariants({ variant }), className, classNative)}\n      {...props}\n    />\n  )\n);\nAlert.displayName = \"Alert\";\n\nexport type AlertTitleProps = HTMLAttributes<HTMLHeadingElement>;\n\nexport const AlertTitle = forwardRef<HTMLParagraphElement, AlertTitleProps>(\n  ({ className, class: classNative, ...props }, ref) => (\n    <h5\n      ref={ref}\n      data-slot=\"alert-title\"\n      className={cn(\"col-start-2 line-clamp-1 min-h-4 font-medium tracking-tight\", className, classNative)}\n      {...props}\n    />\n  )\n);\nAlertTitle.displayName = \"AlertTitle\";\n\nexport type AlertDescriptionProps = HTMLAttributes<HTMLParagraphElement>;\n\nexport const AlertDescription = forwardRef<HTMLParagraphElement, AlertDescriptionProps>(\n  ({ className, class: classNative, ...props }, ref) => (\n    <div\n      ref={ref}\n      data-slot=\"alert-description\"\n      className={cn(\n        \"col-start-2 grid justify-items-start gap-1 text-muted-foreground text-sm [&_p]:leading-relaxed\",\n        className,\n        classNative\n      )}\n      {...props}\n    />\n  )\n);\nAlertDescription.displayName = \"AlertDescription\";\n"
    }
  ],
  "category": "ui"
}
