{
  "name": "table",
  "type": "registry:ui",
  "description": "A responsive table component.",
  "registryDependencies": [
    "https://shadcn-preact.regarde.dev/cn.json"
  ],
  "files": [
    {
      "path": "table.tsx",
      "type": "registry:ui",
      "content": "import type { TdHTMLAttributes, ThHTMLAttributes } from \"preact\";\nimport { type HTMLAttributes, forwardRef } from \"preact/compat\";\nimport { cn } from \"./share/cn\";\n\nexport type TableProps = HTMLAttributes<HTMLTableElement>;\n\nconst Table = forwardRef<HTMLTableElement, TableProps>(({ className, class: classNative, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className, classNative)}\n      {...props}\n    />\n  </div>\n));\nTable.displayName = \"Table\";\n\nexport type TableHeaderProps = HTMLAttributes<HTMLTableSectionElement>;\n\nconst TableHeader = forwardRef<HTMLTableSectionElement, TableHeaderProps>(\n  ({ className, class: classNative, ...props }, ref) => (\n    <thead\n      ref={ref}\n      className={cn(\"[&_tr]:border-b\", className, classNative)}\n      {...props}\n    />\n  )\n);\nTableHeader.displayName = \"TableHeader\";\n\nexport type TableBodyProps = HTMLAttributes<HTMLTableSectionElement>;\n\nconst TableBody = forwardRef<HTMLTableSectionElement, TableBodyProps>(\n  ({ className, class: classNative, ...props }, ref) => (\n    <tbody\n      ref={ref}\n      className={cn(\"[&_tr:last-child]:border-0\", className, classNative)}\n      {...props}\n    />\n  )\n);\nTableBody.displayName = \"TableBody\";\n\nexport type TableFooterProps = HTMLAttributes<HTMLTableSectionElement>;\n\nconst TableFooter = forwardRef<HTMLTableSectionElement, TableFooterProps>(\n  ({ className, class: classNative, ...props }, ref) => (\n    <tfoot\n      ref={ref}\n      className={cn(\"border-t bg-muted/50 font-medium last:[&>tr]:border-b-0\", className, classNative)}\n      {...props}\n    />\n  )\n);\nTableFooter.displayName = \"TableFooter\";\n\nexport type TableRowProps = HTMLAttributes<HTMLTableRowElement>;\n\nconst TableRow = forwardRef<HTMLTableRowElement, TableRowProps>(({ className, class: classNative, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className,\n      classNative\n    )}\n    {...props}\n  />\n));\nTableRow.displayName = \"TableRow\";\n\nexport type TableHeadProps = ThHTMLAttributes<HTMLTableCellElement>;\n\nconst TableHead = forwardRef<HTMLTableCellElement, TableHeadProps>(\n  ({ className, class: classNative, ...props }, ref) => (\n    <th\n      ref={ref}\n      className={cn(\n        \"h-10 px-2 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n        className,\n        classNative\n      )}\n      {...props}\n    />\n  )\n);\nTableHead.displayName = \"TableHead\";\n\nexport type TableCellProps = TdHTMLAttributes<HTMLTableCellElement>;\n\nconst TableCell = forwardRef<HTMLTableCellElement, TableCellProps>(\n  ({ className, class: classNative, ...props }, ref) => (\n    <td\n      ref={ref}\n      className={cn(\n        \"p-2 align-middle [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n        className,\n        classNative\n      )}\n      {...props}\n    />\n  )\n);\nTableCell.displayName = \"TableCell\";\n\nexport type TableCaptionProps = HTMLAttributes<HTMLTableCaptionElement>;\n\nconst TableCaption = forwardRef<HTMLTableCaptionElement, TableCaptionProps>(\n  ({ className, class: classNative, ...props }, ref) => (\n    <caption\n      ref={ref}\n      className={cn(\"mt-4 text-muted-foreground text-sm\", className, classNative)}\n      {...props}\n    />\n  )\n);\nTableCaption.displayName = \"TableCaption\";\n\nexport { Table, TableBody, TableCaption, TableCell, TableFooter, TableHead, TableHeader, TableRow };\n"
    }
  ],
  "category": "ui"
}
