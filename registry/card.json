{
  "name": "card",
  "type": "registry:ui",
  "description": "Displays a card with header, content, and footer.",
  "registryDependencies": [
    "cn"
  ],
  "files": [
    {
      "path": "card.tsx",
      "type": "registry:ui",
      "content": "import { type HTMLAttributes, forwardRef } from \"preact/compat\";\nimport { cn } from \"./share/cn\";\n\nexport type CardProps = HTMLAttributes<HTMLDivElement>;\n\nexport const Card = forwardRef<HTMLDivElement, CardProps>(\n  ({ className, class: classNative, ...props }, forwardedRef) => (\n    <div\n      ref={forwardedRef}\n      data-slot=\"card\"\n      className={cn(\n        \"flex flex-col gap-6 rounded-xl border bg-card py-6 text-card-foreground shadow-sm\",\n        className,\n        classNative\n      )}\n      {...props}\n    />\n  )\n);\nCard.displayName = \"Card\";\n\nexport type CardHeaderProps = HTMLAttributes<HTMLDivElement>;\n\nexport const CardHeader = forwardRef<HTMLDivElement, CardHeaderProps>(\n  ({ className, class: classNative, ...props }, forwardedRef) => (\n    <div\n      ref={forwardedRef}\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className,\n        classNative\n      )}\n      {...props}\n    />\n  )\n);\nCardHeader.displayName = \"CardHeader\";\n\nexport type CardTitleProps = HTMLAttributes<HTMLDivElement>;\n\nexport const CardTitle = forwardRef<HTMLDivElement, CardTitleProps>(\n  ({ className, class: classNative, ...props }, forwardedRef) => (\n    <div\n      ref={forwardedRef}\n      data-slot=\"card-title\"\n      className={cn(\"font-semibold leading-none\", className, classNative)}\n      {...props}\n    />\n  )\n);\nCardTitle.displayName = \"CardTitle\";\n\nexport type CardDescriptionProps = HTMLAttributes<HTMLDivElement>;\n\nexport const CardDescription = forwardRef<HTMLDivElement, CardDescriptionProps>(\n  ({ className, class: classNative, ...props }, forwardedRef) => (\n    <div\n      ref={forwardedRef}\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className, classNative)}\n      {...props}\n    />\n  )\n);\nCardDescription.displayName = \"CardDescription\";\n\nexport type CardContentProps = HTMLAttributes<HTMLDivElement>;\n\nexport const CardContent = forwardRef<HTMLDivElement, CardContentProps>(\n  ({ className, class: classNative, ...props }, forwardedRef) => (\n    <div\n      ref={forwardedRef}\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className, classNative)}\n      {...props}\n    />\n  )\n);\nCardContent.displayName = \"CardContent\";\n\nexport type CardFooterProps = HTMLAttributes<HTMLDivElement>;\n\nexport const CardFooter = forwardRef<HTMLDivElement, CardFooterProps>(\n  ({ className, class: classNative, ...props }, forwardedRef) => (\n    <div\n      ref={forwardedRef}\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className, classNative)}\n      {...props}\n    />\n  )\n);\nCardFooter.displayName = \"CardFooter\";\n\nexport type CardActionProps = HTMLAttributes<HTMLDivElement>;\n\nexport const CardAction = forwardRef<HTMLDivElement, CardActionProps>(\n  ({ className, class: classNative, ...props }, forwardedRef) => (\n    <div\n      ref={forwardedRef}\n      data-slot=\"card-action\"\n      className={cn(\"col-start-2 row-span-2 row-start-1 self-start justify-self-end\", className, classNative)}\n      {...props}\n    />\n  )\n);\nCardAction.displayName = \"CardAction\";\n"
    }
  ],
  "category": "ui"
}