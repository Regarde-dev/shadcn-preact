{
  "name": "modal",
  "type": "registry:ui",
  "description": "A modal overlay component.",
  "registryDependencies": [
    "https://shadcn-preact.regarde.dev/portal.json"
  ],
  "files": [
    {
      "path": "modal.tsx",
      "type": "registry:ui",
      "content": "import { type HTMLAttributes, type PropsWithChildren, forwardRef, useEffect } from \"preact/compat\";\nimport { Portal } from \"./portal\";\nimport { cn } from \"./share/cn\";\nimport { getScrollBarWidth } from \"./share/getScrollBarWidth\";\n\nexport type ModalProps = PropsWithChildren<\n  HTMLAttributes<HTMLDivElement> & {\n    onClose?: () => void;\n  }\n>;\n\nexport const Modal = forwardRef<HTMLDivElement, ModalProps>(({ ...props }, ref) => {\n  return (\n    <Portal>\n      <ModalContent\n        {...props}\n        ref={ref}\n      />\n    </Portal>\n  );\n});\nModal.displayName = \"Modal\";\n\nexport type ModalContentProps = PropsWithChildren<\n  HTMLAttributes<HTMLDivElement> & {\n    onClose?: () => void;\n  }\n>;\n\nlet modal_counter = 0;\n\nconst ModalContent = forwardRef<HTMLDivElement, ModalContentProps>(\n  ({ className, class: classNative, ...props }, ref) => {\n    useEffect(() => {\n      modal_counter += 1;\n\n      const scrollbarWidth = getScrollBarWidth(document.body);\n      // TODO: future use for remember previous body margin\n      // const marginRigthComputed = document.body.computedStyleMap().get(\"margin-right\")\n      document.body.classList.add(\"overflow-hidden\");\n      document.body.style.marginRight = `${scrollbarWidth}px`;\n\n      return () => {\n        modal_counter -= 1;\n        if (modal_counter === 0) {\n          document.body.classList.remove(\"overflow-hidden\");\n          document.body.style.marginRight = `${0}px`;\n        }\n      };\n    }, []);\n\n    return (\n      <div\n        ref={ref}\n        onMouseDown={props.onClose}\n        data-state=\"open\"\n        className={cn(\"fade-in-0 fixed inset-0 z-50 animate-in bg-black/80\", className, classNative)}\n        {...props}\n      >\n        {props.children}\n      </div>\n    );\n  }\n);\n"
    }
  ],
  "category": "ui"
}
